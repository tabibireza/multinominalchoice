install.packages(xtable)
install.packages("xtable")
install.packages("knitr")
install.packages("ggplot")
install.packages("ggplot2")
install.packages("mlogit")
install.packages(caret)
install.packages("caret")
install.packages("e1071")
library("xtable") # processing of regression output
library("knitr") # used for report compilation and table display
library("ggplot2") # very popular plotting library ggplot2
library("ggthemes") # themes for ggplot2
suppressMessages(library("mlogit")) # multinomial logit
library("caret")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
library("lattice")
getwd ()
data <-read.csv(file="transportation_data.csv")
kable(head(data,8))
kable(head(data,8))
library("knitr") # used for report compilation and table display
library("ggplot2") # very popular plotting library ggplot2
library("ggthemes") # themes for ggplot2
suppressMessages(library("mlogit")) # multinomial logit
library("caret")
install.packages("lattice")
install.packages("lattice")
suppressMessages(library("mlogit")) # multinomial logit
library("caret")
library("knitr", lib.loc="C:/Program Files/R/R-3.5.3/library")
kable(head(data,8))
library("e1071", lib.loc="C:/Program Files/R/R-3.5.3/library")
#Descriptive statistics
transp_dec <- rbind(
colSums(data[seq1, nrow(data), 4),])/210,
colSums(data[seq2, nrow(data), 4),])/210,
colSums(data[seq3, nrow(data), 4),])/210,
colSums(data[seq4, nrow(data), 4),])/210)
#Descriptive statistics
transp_dec <- rbind(
colSums(data[seq(1, nrow(data), 4),])/210,
colSums(data[seq(2, nrow(data), 4),])/210,
colSums(data[seq(3, nrow(data), 4),])/210,
colSums(data[seq(4, nrow(data), 4),])/210)
transp_dec <- transp_dec [,c(2:5)]
colnames(transp_dec) <- c('CHOICE SHARE','AVG. WAITING TTME', 'AVG. COST', 'AVG. TRAVEL TIME')
kable(transp_dec)
View(transp_dec)
View(data)
Household_income <- data[seq(1, nrow(data), 4), 6]
summary(Household_income)
hist(Household_income)
# Vj =β0j + β1TTMEj + β2INVCj + β3INVTj
# Pj= exp(Vj)/ exp(V1) + exp(V2) + exp(V3) + exp(V4)
MNL model estimation - product attributes
# Vj =β0j + β1TTMEj + β2INVCj + β3INVTj
# Pj= exp(Vj)/ exp(V1) + exp(V2) + exp(V3) + exp(V4)
mdata <- mlogit.data( data=data,
choice ='MODE', # variable that contains choice
shape ='long', # tells mlogit how data is structured (every row is altern
ative)
varying=3:5, # only select variables that describe the alternatives
alt.levels = c("plane", "train", "bus", "car"), # levels of the alternatives
id.var='TRAVELER') # consumer id
head(mdata, 6)
# Vj =β0j + β1TTMEj + β2INVCj + β3INVTj
# Pj= exp(Vj)/ exp(V1) + exp(V2) + exp(V3) + exp(V4)
mdata <- mlogit.data( data=data,
choice ='MODE', # variable that contains choice
shape ='long', # tells mlogit how data is structured (every row is alternative)
varying=3:5, # only select variables that describe the alternatives
alt.levels = c("plane", "train", "bus", "car"), # levels of the alternatives
id.var='TRAVELER') # consumer id
head(mdata, 6)
set.seed(999)
model <- mlogit(MODE~TTME+INVC+INVT,data=mdata)
summary(model)
#predict the probabilities of the choice for each person
kable(head(predict(model, mdata),1))
#predict the probabilities of the choice for each person
kable(head(predict(model, mdata),200))
#predict the probabilities of the choice for each person
kable(head(predict(model, mdata),2))
# accuracy of prediction
predicted_alternative <- apply(predict(model, mdata), 1, which.max)
selected_alternative <- rep(1:4, 210) [data$MODE>0]
confusionMatrix(predicted_alternative,selected_alternative)
r
confusionMatrix(predicted_alternative,selected_alternative)
model <- mlogit(MODE~TTME+INVC+INVT,data=mdata)
summary(model)
predicted_alternative <- apply(predict(model, mdata), 1, which.max)
selected_alternative <- rep(1:4, 210) [data$MODE>0]
confusionMatrix(predicted_alternative,selected_alternative)
data <-read.csv(file="transportation_data.csv")
kable(head(data,8))
#Descriptive statistics
transp_dec <- rbind(
colSums(data[seq(1, nrow(data), 4),])/210,
colSums(data[seq(2, nrow(data), 4),])/210,
colSums(data[seq(3, nrow(data), 4),])/210,
colSums(data[seq(4, nrow(data), 4),])/210)
transp_dec <- transp_dec [,c(2:5)]
colnames(transp_dec) <- c('CHOICE SHARE','AVG. WAITING TTME', 'AVG. COST', 'AVG. TRAVEL TIME')
kable(transp_dec)
Household_income <- data[seq(1, nrow(data), 4), 6]
summary(Household_income)
hist(Household_income)
#MNL model estimation - product attributes
# Vj =β0j + β1TTMEj + β2INVCj + β3INVTj
# Pj= exp(Vj)/ exp(V1) + exp(V2) + exp(V3) + exp(V4)
mdata <- mlogit.data( data=data,
choice ='MODE', # variable that contains choice
shape ='long', # tells mlogit how data is structured (every row is alternative)
varying=3:5, # only select variables that describe the alternatives
alt.levels = c("plane", "train", "bus", "car"), # levels of the alternatives
id.var='TRAVELER') # consumer id
head(mdata, 6)
set.seed(999)
model <- mlogit(MODE~TTME+INVC+INVT,data=mdata)
summary(model)
#predict the probabilities of the choice for each person up to number
kable(head(predict(model, mdata),2))
# accuracy of prediction
predicted_alternative <- apply(predict(model, mdata), 1, which.max)
selected_alternative <- rep(1:4, 210) [data$MODE>0]
confusionMatrix(predicted_alternative,selected_alternative)
predicted_alternative <- apply(predict(model,mdata),1,which.max)
selected_alternative <- rep(1:4,210)[data$MODE>0]
confusionMatrix(predicted_alternative,selected_alternative)
redicted_alternative <- apply(predict(model,mdata),1,which.max)
selected_alternative <- rep(1:5,210)[data$MODE>0]
confusionMatrix(predicted_alternative,selected_alternative)
predicted_alternative <- apply(predict(model,mdata),1,which.max)
selected_alternative <- rep(1:6,210)[data$MODE>0]
confusionMatrix(predicted_alternative,selected_alternative)
getwd ()
predicted_alternative <- apply(predict(model,mdata),1,which.max)
selected_alternative <- rep(1:4,210)[data$MODE>0]
confusionMatrix(predicted_alternative,selected_alternative)
suppressMessages(library("mlogit")) # multinomial logit
#Descriptive statistics
transp_dec <- rbind(
colSums(data[seq(1, nrow(data), 4),])/210,
colSums(data[seq(2, nrow(data), 4),])/210,
colSums(data[seq(3, nrow(data), 4),])/210,
colSums(data[seq(4, nrow(data), 4),])/210)
transp_dec <- transp_dec [,c(2:5)]
colnames(transp_dec) <- c('CHOICE SHARE','AVG. WAITING TTME', 'AVG. COST', 'AVG. TRAVEL TIME')
kable(transp_dec)
Household_income <- data[seq(1, nrow(data), 4), 6]
summary(Household_income)
hist(Household_income)
#MNL model estimation - product attributes
# Vj =β0j + β1TTMEj + β2INVCj + β3INVTj
# Pj= exp(Vj)/ exp(V1) + exp(V2) + exp(V3) + exp(V4)
mdata <- mlogit.data( data=data,
choice ='MODE', # variable that contains choice
shape ='long', # tells mlogit how data is structured (every row is alternative)
varying=3:5, # only select variables that describe the alternatives
alt.levels = c("plane", "train", "bus", "car"), # levels of the alternatives
id.var='TRAVELER') # consumer id
head(mdata, 6)
View(mdata)
set.seed(999)
model <- mlogit(MODE~TTME+INVC+INVT,data=mdata)
summary(model)
View(model)
# accuracy of prediction
predicted_alternative <- apply(predict(model,mdata),1,which.max)
selected_alternative <- rep(1:4,210)[data$MODE>0]
confusionMatrix(predicted_alternative,selected_alternative)
#predict the probabilities of the choice for each person up to number
kable(head(predict(model, mdata),2))
#predict the probabilities of the choice for each person up to number
kable(head(predict(model, mdata),1))
# accuracy of prediction
predicted_alternative <- apply(predict(model,mdata),1,which.max)
selected_alternative <- rep(1:4,210)[data$MODE>0]
confusionMatrix(predicted_alternative,selected_alternative)
selected_alternative <- rep(1:4,210)[mdata$MODE>0]
confusionMatrix(predicted_alternative,selected_alternative)
# accuracy of prediction
predicted_alternative <- apply(predict(model,mdata),1,which.max)
selected_alternative <- rep(1:4,210)[data$MODE= TRUE]
confusionMatrix(predicted_alternative,selected_alternative)
selected_alternative <- rep(1:4,210)[data$MODE= 1]
selected_alternative <- rep(1:4,210)[data$MODE> 1]
confusionMatrix(predicted_alternative,selected_alternative)
# accuracy of prediction
predicted_alternative <- apply(predict(model,mdata),1,which.max)
selected_alternative <- rep(1:4,210)
confusionMatrix(predicted_alternative,selected_alternative)
# simulate - what-if analysis - scenarios
# if we reduce in-vehicle time in train by 10% (multiply it by 0.9 )
# how choice share differs
mdata.new <- mdata
mdata.new[seq(2,840,4), "INVT"] <- 0.9*mdata.new[seq(2,840,4),"INVT"]
predicted_alternative_new <- apply(predict(model1,mdata.new),1,which.max)
#MNL model estimation - product attributes
# Vj =β0j + β1TTMEj + β2INVCj + β3INVTj
# Pj= exp(Vj)/ exp(V1) + exp(V2) + exp(V3) + exp(V4)
require('mlogit')
mdata <- mlogit.data( data=data,
choice ='MODE', # variable that contains choice
shape ='long', # tells mlogit how data is structured (every row is alternative)
varying=3:5, # only select variables that describe the alternatives
alt.levels = c("plane", "train", "bus", "car"), # levels of the alternatives
id.var='TRAVELER') # consumer id
head(mdata, 6)
set.seed(999)
model <- mlogit(MODE~TTME+INVC+INVT,data=mdata)
summary(model)
#  how likelihood ratio test
model.null <- mlogit(MODE~1,data=mdata)
lrtest(model,model.null)
#predict the probabilities of the choice for each person up to number
kable(head(predict(model, mdata),1))
# accuracy of prediction
predicted_alternative <- apply(predict(model,mdata),1,which.max)
selected_alternative <- rep(1:4,210)[data$MODE>0]
confusionMatrix(predicted_alternative,selected_alternative)
# model that also includes a demographic variable – household income
# Vj =α0j + α1jHouseholdIncome + β1TTMEj + β2INVCj + β3INVTj
model1 <- mlogit(MODE~TTME+INVC+INVT|HINC,data=mdata)
summary(model1)
# likelihood ratio test to test the second model against
lrtest(model1,model)
#  new confusion matrix
predicted_alternative <- apply(predict(model1,mdata),1,which.max)
selected_alternative <- rep(1:4,210)[data$MODE>0]
confusionMatrix(predicted_alternative,selected_alternative)
# accuracy of prediction
require("heuristica")
# accuracy of prediction
install.packages("heuristica")
library("heuristica")
predicted_alternative <- apply(predict(model,mdata),1,which.max)
selected_alternative <- rep(1:4,210)[data$MODE>0]
confusionMatrix(predicted_alternative,selected_alternative)
# simulate - what-if analysis - scenarios
# if we reduce in-vehicle time in train by 10% (multiply it by 0.9 )
# how choice share differs
mdata.new <- mdata
mdata.new[seq(2,840,4),"INVT"] <- 0.9*mdata.new[seq(2,840,4),"INVT"]
predicted_alternative_new <- apply(predict(model1,mdata.new),1,which.max)
table(predicted_alternative)/210 # probability under original data
table(predicted_alternative_new)/210 # probability after decrease in train travel time
(table(predicted_alternative_new) - table(predicted_alternative))/table(predicted_alternative)
# interact a demographic variable with product attributes
model2 <- mlogit(MODE~TTME+INVC+INVT+TTME:HINC+INVC:HINC+INVT:HINC|HINC,data=mdata)
summary(model2)
install.packages("xtable")
install.packages("knitr")
install.packages("ggplot2")
install.packages("mlogit")
install.packages("caret")
install.packages("e1071")
install.packages("lattice")
install.packages("xtable")
install.packages("knitr")
install.packages("ggplot2")
install.packages("mlogit")
install.packages("caret")
install.packages("e1071")
install.packages("lattice")
library("xtable") # processing of regression output
library("knitr") # used for report compilation and table display
library("ggplot2") # very popular plotting library ggplot2
library("ggthemes") # themes for ggplot2
suppressMessages(library("mlogit")) # multinomial logit
library("caret")
# DATA
#  210 travelers making a choice between 4 different modes of transport
# 1 - plane (air) 2 - train 3 - bus 4 - car
# TTME = terminal waiting time for plane, train and bus (minutes); 0 for car.
# INVC = in-vehicle cost (dollars).
# INVT = travel time (minutes).
# HINC = household income ($1000s).
getwd ()
data <-read.csv(file="transportation_data.csv")
kable(head(data,8))
#Descriptive statistics
transp_dec <- rbind(
colSums(data[seq(1, nrow(data), 4),])/210,
colSums(data[seq(2, nrow(data), 4),])/210,
colSums(data[seq(3, nrow(data), 4),])/210,
colSums(data[seq(4, nrow(data), 4),])/210)
transp_dec <- transp_dec [,c(2:5)]
colnames(transp_dec) <- c('CHOICE SHARE','AVG. WAITING TTME', 'AVG. COST', 'AVG. TRAVEL TIME')
kable(transp_dec)
View(data)
Household_income <- data[seq(1, nrow(data), 4), 6]
summary(Household_income)
hist(Household_income)
#MNL model estimation - product attributes
# Vj =β0j + β1TTMEj + β2INVCj + β3INVTj
# Pj= exp(Vj)/ exp(V1) + exp(V2) + exp(V3) + exp(V4)
require('mlogit')
exp(V1) + exp(V2) + exp(V3) + exp(V4)
#MNL model estimation - product attributes
# Vj =β0j + β1TTMEj + β2INVCj + β3INVTj
# Pj= exp(Vj)/ exp(V1) + exp(V2) + exp(V3) + exp(V4)
require('mlogit')
mdata <- mlogit.data( data=data,
choice ='MODE', # variable that contains choice
shape ='long', # tells mlogit how data is structured (every row is alternative)
varying=3:5, # only select variables that describe the alternatives
alt.levels = c("plane", "train", "bus", "car"), # levels of the alternatives
id.var='TRAVELER') # consumer id
View(mdata)
set.seed(999)
model <- mlogit(MODE~TTME+INVC+INVT,data=mdata)
summary(model)
#  how likelihood ratio test
model.null <- mlogit(MODE~1,data=mdata)
lrtest(model,model.null)
#predict the probabilities of the choice for each person up to number
kable(head(predict(model, mdata),1))
View(model)
View(model)
View(model1)
View(model1)
View(transp_dec)
View(transp_dec)
#predict the probabilities of the choice for each person up to number
kable(head(predict(model, mdata),10))
# accuracy of prediction
install.packages("heuristica")
library
library("heuristica")
predicted_alternative <- apply(predict(model,mdata),1,which.max)
selected_alternative <- rep(1:4,210)[data$MODE>0]
confusionMatrix(predicted_alternative,selected_alternative)
predicted_alternative <- apply(predict(model,mdata),1,which.max)
selected_alternative <- rep(1:4,210)[data$MODE>0]
confusionMatrix(predicted_alternative,selected_alternative)
predicted_alternative <- apply(predict(model,mdata),210,which.max)
predicted_alternative <- apply(predict(model,mdata),1,which.max)
selected_alternative <- rep(1:4,210)[data$MODE>0]
confusionMatrix(predicted_alternative,selected_alternative)
predicted_alternative <- apply(predict(model,mdata),1,which.max)
selected_alternative <- rep(1:4,210)[data$MODE=True]
confusionMatrix(predicted_alternative,selected_alternative)
selected_alternative <- rep(1:4,210)[data$MODE="True"]
selected_alternative <- rep(1:4,210)[data$MODE=True]
View(data)
# model that also includes a demographic variable – household income
# Vj =α0j + α1jHouseholdIncome + β1TTMEj + β2INVCj + β3INVTj
model1 <- mlogit(MODE~TTME+INVC+INVT|HINC,data=mdata)
summary(model1)
# likelihood ratio test to test the second model against
lrtest(model1,model)
# interact a demographic variable with product attributes
model2 <- mlogit(MODE~TTME+INVC+INVT+TTME:HINC+INVC:HINC+INVT:HINC|HINC,data=mdata)
summary(model2)
